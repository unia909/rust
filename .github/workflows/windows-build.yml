name: Windows Rust Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build Rust
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Visual Studio Build Tools
      shell: pwsh
      run: |
        # Скачиваем и устанавливаем Build Tools
        $vsSetupUrl = "https://aka.ms/vs/17/release/vs_BuildTools.exe"
        $vsSetupPath = "$env:TEMP\vs_BuildTools.exe"
        Invoke-WebRequest -Uri $vsSetupUrl -OutFile $vsSetupPath
        
        Start-Process -Wait -FilePath $vsSetupPath -ArgumentList @(
          '--add', 'Microsoft.VisualStudio.Workload.VCTools',
          '--add', 'Microsoft.VisualStudio.Component.VC.ATL',
          '--add', 'Microsoft.VisualStudio.Component.VC.ATLMFC',
          '--add', 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64',
          '--add', 'Microsoft.VisualStudio.Component.Windows11SDK.22621',
          '--quiet', '--norestart', '--nocache'
        )

    - name: Install build tools
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

        choco install -y cmake ninja

        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        refreshenv

    - name: Setup MSVC Environment
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
        set >> "%GITHUB_ENV%"

    - name: Configure Rust
      shell: cmd
      run: |
        echo [llvm] > config.toml
        echo download-ci-llvm = false >> config.toml
        echo. >> config.toml
        echo [build] >> config.toml
        echo extended = true >> config.toml
        echo. >> config.toml
        echo [target.x86_64-pc-windows-msvc] >> config.toml
        echo default-linker = "lld-link" >> config.toml

    - name: Build Rust
      shell: cmd
      run: |
        python x.py build --stage 1 library/std

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rust-build
        path: |
          build\x86_64-pc-windows-msvc\stage1\
          build\x86_64-pc-windows-msvc\stage0-tools-bin\
